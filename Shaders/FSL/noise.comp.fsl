RES(RWBuffer(float), ElevationBuffer, UPDATE_FREQ_NONE, b0, binding=0);

#define __TOTAL_REGION_SIZE__ 4096
#define THE_FORGE_SHADING_LANGUAGE

#include "../../FastNoise2HLSL/FastNoiseHLSL.h"

NUM_THREADS(16, 16, 1)
void CS_MAIN(SV_GroupThreadID(uint3) inGroupId, SV_DispatchThreadID(uint3) DTid)
{
    INIT_MAIN;

    GenNoiseSteps();
    tree.NbSteps = 2;

    if (DTid.x >= __TOTAL_REGION_SIZE__ || DTid.y >= __TOTAL_REGION_SIZE__) {
        RETURN();
    }

    uint idx = DTid.y * __TOTAL_REGION_SIZE__ + DTid.x;
    float x = float(DTid.x), y = float(DTid.y);

    int seed = 1337;
    float freq = 0.004f, value;

    // value = OpenSimplex2Noise(seed, x * freq, y * freq); // Working
    value = NodeTreeProcessing(seed, x * freq, y * freq); // Crashing

    Get(ElevationBuffer)[idx] = value;

    RETURN();
}
